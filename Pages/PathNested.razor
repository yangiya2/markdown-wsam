@page "/{p01}/{p02}/{p03}/{p04}/{p05}/{p06}/{p07}/{p08}/{p09}/{p10}/{p11}"

@* @page "/{p01}/{p02}/{p03}/{p04}/{p05}/{p06}/{p07}/{p08}/{p09}"
@page "/{p01}/{p02}/{p03}/{p04}/{p05}/{p06}/{p07}/{p08}"
@page "/{p01}/{p02}/{p03}/{p04}/{p05}/{p06}/{p07}"
@page "/{p01}/{p02}/{p03}/{p04}/{p05}/{p06}"
@page "/{p01}/{p02}/{p03}/{p04}/{p05}"
@page "/{p01}/{p02}/{p03}/{p04}"
@page "/{p01}/{p02}/{p03}"
@page "/{p01}/{p02}"
@page "/{p01}"
 *@
<PageTitle>Path 1番目</PageTitle>

<h1>Path 003番目</h1>

<div>path : @(path())</div>
<div>path01をキャストした値 : @p01</div>
<div>path02をキャストした値 : @p02</div>
<div>path03をキャストした値 : @p03</div>
<div>path04をキャストした値 : @p04</div>
<div>path05をキャストした値 : @p05</div>
<div>path06をキャストした値 : @p06</div>
<div>path07をキャストした値 : @p07</div>
<div>path08をキャストした値 : @p08</div>
<div>path09をキャストした値 : @p09</div>
<div>path09をキャストした値 : @p10</div>



@code {

    [Parameter]
    public string? p01 { get; set; }

    [Parameter]
    public string? p02 { get; set; }

    [Parameter]
    public string? p03 { get; set; }

    [Parameter]
    public string? p04 { get; set; }

    [Parameter]
    public string? p05 { get; set; }

    [Parameter]
    public string? p06 { get; set; }

    [Parameter]
    public string? p07 { get; set; }

    [Parameter]
    public string? p08 { get; set; }

    [Parameter]
    public string? p09 { get; set; }

    [Parameter]
    public string? p10 { get; set; }

    [Parameter]
    public string? p11 { get; set; }


    private string pathNullable(string? value)
    {
        if (value == null)
        {
            return "";
        }
        else
        {
            return "/" + value;
        }
    }

    // [Parameter]
    public string path()
    {
        string path = pathNullable(p01) //
                + pathNullable(p02) //
                + pathNullable(p03) //
                + pathNullable(p04) //
                + pathNullable(p05) //
                + pathNullable(p06) //
                + pathNullable(p07) //
                + pathNullable(p08) //
                + pathNullable(p09) //
                + pathNullable(p10) //
                + pathNullable(p11) //
                ;
        return path;
    }

    private string content(string url)
    {

        Task<string?> res =  HttpUtils.GetAsync(url);
        return null;

    }


}